# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
- group: STG
- group: COMMON
- name:  imageRepository
  value: 'stg-renewal'
- name:  dockerfilePath
  value: '$(Build.SourcesDirectory)/src/Renewal.API/Dockerfile'
- name:  tag
  value: '$(Build.BuildId)'
  
  # Agent VM image name
- name: vmImageName
  value: 'windows-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build Application
    pool:
      vmImage: $(vmImageName)
    steps:
    
    - task: UseDotNet@2
      displayName: Set .NET version
      inputs:
        packageType: 'sdk'
        version: '3.1.x'

    - task: PowerShell@2
      displayName: Inject config
      inputs:
        targetType: 'inline'
        script: |
              $jsonPath= "src/Renewal.API/appsettings.json"
              $s = Get-Content $jsonPath -Raw
              $s = $s -replace "{hostname}",'$(hostname)'   
              $s = $s.Replace("-{environment}", "") | ConvertFrom-Json
              $s.Serilog.WriteTo[0].Args.requestUri='$(Logging-URL)'
              $s.AzureKeyVault.Url='$(Keyvault-URL)'
              $s.AzureKeyVault.ApplicationId='$(Keyvault-ID)'
              $s.AzureKeyVault.ApplicationSecret='$(Keyvault-Secret)'
              $s|ConvertTo-Json -Depth 9 |Set-Content $jsonPath          
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: DotNetCoreCLI@2
      displayName: Publish project
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '**/*.csproj'
        arguments: '-c=Release'
        zipAfterPublish: false
        
    - task: Docker@2
      displayName: Docker build
      inputs:
        containerRegistry: $(containerRegistryServiceConnection)
        repository: $(imageRepository)
        command: 'build'
        Dockerfile: $(dockerfilePath)
        buildContext: 'src/'
        tags: '$(tag)'
        arguments: '--build-arg Build_Env=STG'
    
    - task: Docker@2
      displayName: Docker push
      inputs:
        containerRegistry: $(containerRegistryServiceConnection)
        repository: $(imageRepository)
        command: 'push'
    # - task: Docker@2
    #   displayName: Build and push an image to container registry
    #   inputs:
    #     command: buildAndPush
    #     repository: $(imageRepository)
    #     dockerfile: $(dockerfilePath)
    #     containerRegistry: $(containerRegistryServiceConnection)
    #     tags: |
    #       $(tag)

    - task: ArchiveFiles@2
      displayName: Zip for debugging
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/src/Renewal.API/bin/Release/'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(tag).zip'
        replaceExistingArchive: true
    
    - task: PublishBuildArtifacts@1
      displayName: Publish Build Artifacts
      inputs:
            PathtoPublish: $(build.artifactstagingdirectory)
            ArtifactName: 'Renewal'
            publishLocation: 'Container'